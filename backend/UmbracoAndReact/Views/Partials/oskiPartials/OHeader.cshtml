@using System.Globalization;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<OHome>
@{
    var logoHeader = Model.OHeaderLogo != null ? Model.OHeaderLogo.Url() : string.Empty;
    var langs = UmbracoContext.Content.GetAtRoot(false);
    var logoAltText = string.Empty;
    var style = string.IsNullOrEmpty(Model?.OStyles) ? "default" : Model.OStyles;
    var styleClass = style == "default" ? "header" : "header-org-time";
    ViewData["NeedHelp"] = Model;
    if (Model.OFooterLogo != null)
    {
        logoAltText = Umbraco.Media(Model?.OFooterLogo?.Id).Value("umbracoAltText")?.ToString();
    }
}
<header class="@styleClass" id="header">
    <div class="container">
        @{
            var innerClass = $"{styleClass}__inner";
        }

        <div class="@innerClass">
            @if (UmbracoContext.PublishedRequest.PublishedContent.ContentType.Alias.Equals("oHome"))
            {
                <a class="header__logo inactive" href="javascript:void(0)">
                    <img src="@logoHeader" alt="@(string.IsNullOrEmpty(logoAltText) ? "header logo" : logoAltText)">
                </a>
            }
            else
            {
                <a class="header__logo" href="@Model.Url()">
                    <img src="@logoHeader" alt="@(string.IsNullOrEmpty(logoAltText) ? "header logo" : logoAltText)">
                </a>
            }
            @{
                var menuClass = $"{styleClass}__menu";
                var menuLinkClass = $"{styleClass}__menu-link";
                var socialsClass = $"{styleClass}__socials";
                var socialClass = $"{styleClass}__social";
            }
            <div class="header__navigation" id="navigation">
                <nav class="header__nav">
                    <div class="@menuClass">
                        @foreach (OHeaderMenuItem item in Model.OHeaderMenuItems.Select(x => x.Content))
                        {
                            var linkUrl = item?.OLink?.Url ?? "";
                            var hrefLink = linkUrl != "" ? $"href={linkUrl}" : "";
                            var linkName = item?.OLink?.Name ?? "Read more";

                            if (item.OChildMenuItems.Any())
                            {
                                <div class="header__menu__item">
                                    <div class="header__menu__item__info @(ViewData["url"].ToString().Equals(linkUrl) ? "header__menu__item__info--active" : "")">
                                        <a class="@menuLinkClass" @hrefLink>@item.OCaption</a>
                                        <div style="display:flex; align-items:center; justify-content:center">
                                            <span class="header__menu__item__icon"></span>
                                        </div>
                                    </div>
                                    <hr id="mobile-sectionline" />
                                    @await Html.PartialAsync("Menu/_ChildMenuItems", item)
                                </div>
                            }
                            else
                            {
                                <div class="header__menu__item">
                                    <div class="header__menu__item__info @(ViewData["url"].ToString().Equals(linkUrl) ? "header__menu__item__info--active" : "")">
                                        <a @hrefLink class="@menuLinkClass">@item.OCaption</a>
                                    </div>
                                    <hr id="mobile-sectionline" />
                                </div>
                            }
                        }
                    </div>
                </nav>


                <div style="display: inline-flex" id="attributes">
                    @if (Model.OShowLanguagesSwitch)
                    {
                        var currentPage = UmbracoContext.PublishedRequest.PublishedContent;
                        <div class="header__languages" onclick="toggleLanguageDropdown()">
                            <div style="display: inline-flex; gap:6px; justify-content:space-between; align-items:center;" class="languages-container">
                                <img src="~/Content/images/language_svgrepo.com.svg" style="width: 20px;" alt="language_icon" />
                                <div class="language-btn">@(new CultureInfo(currentPage.GetCultureFromDomains()).TwoLetterISOLanguageName.ToUpper())</div>
                                <span class="header__menu__item__icon" id="lng-icon" style="width:10px !important; transform: scale(1.5) rotate(0deg);"></span>
                            </div>
                            <div id="languageDropdown" class="language-dropdown">

                                @foreach (var (culture, infos) in currentPage.Cultures)
                                {
                                    if (currentPage.GetCultureFromDomains().ToLower().Equals(culture))
                                    {
                                        continue;
                                    }
                                    var cultureInfo = new CultureInfo(culture);
                                    <a href="@currentPage.Url(culture)">
                                        @cultureInfo.TwoLetterISOLanguageName.ToUpper()
                                    </a>
                                }
                            </div>
                        </div>
                    }

                    <div class="@socialsClass">
                        @foreach (SocialLink link in Model.OHeaderMenuSocialLinks.Select(item => item.Content))
                        {
                            var linkUrl = link?.OUrl.FirstOrDefault()?.Url ?? "#";
                            <a href="@linkUrl" target="@(link?.OUrl.First().Target)" class="@socialClass">
                                @Html.Raw(await System.IO.File.ReadAllTextAsync("wwwroot" + link.OIcon.Url()))
                            </a>
                        }
                    </div>
                </div>



                @if (Model.OButtons.Any())
                {
                    var buttonsClass = $"{styleClass}__buttons";
                    var buttonClass = $"{styleClass}__button";
                    <div class="@buttonsClass">
                        @foreach (OButton button in Model.OButtons.Select(item => item.Content))
                        {
                            <a href="@button.OButtonUrl.Url" class="@buttonClass" data-link="@button.OButtonUrl.Url">@button.OButtonName</a>
                        }
                    </div>
                }

                <!--
                    <div class="header__menu__mobile">
                        <div class="header__menu__item__need-help">
                            <div class="header__menu__item__children__title">
                @Model.ONeedHelpTitle
                            </div>
                            <div class="header__menu__item__need-help__content">
                                <div class="header__menu__item__need-help__content__text">
                @Html.Raw(Model.ONeedHelpText)
                                </div>
                                <div class="header__menu__item__need-help__content__success-manager">
                @if (Model.OSuccessManagerPhoto != null)
                {
                                                        <div class="header__menu__item__need-help__content__success-manager__photo" style="background-image: url(@Model.OSuccessManagerPhoto.Url());"></div>
                }
                                    <div class="header__menu__item__need-help__content__success-manager__info">
                                        <div class="header__menu__item__need-help__content__success-manager__name">@Model.OSuccessManagerName</div>
                                        <div class="header__menu__item__need-help__content__success-manager__position">@Model.OSuccessManagerPosition</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                -->
            </div>
        </div>
        <button class="header__burger" type="button" id="burger"><img src="~/Content/images/menu-alt-1_svgrepo.com.svg" style="width: 30px;" /></button>
    </div>
</header>